/*====================================================*/
/* Ryan Nguyen and Tyler Bishop */
/* ELEC 3040/3050 - Lab 3, Program 1 */
/*====================================================*/
#include "STM32L1xx.h"

int count;
int key;
int reset;

void PinSetup () {
	RCC->AHBENR |= 0x01; // Sets up the Inputs
	GPIOA->MODER &= ~(0x0000000C); // Setups up PA1 as an Input

	RCC->AHBENR |= 0x04; // Sets up the LED Outputs
	GPIOC->MODER &= ~(0x000000FF); 
	GPIOC->MODER |= (0x00000055); 
	
	RCC->AHBENR |= 0x02;
	GPIOB->MODER &= ~(0x0000FFFF);
	
	NVIC_EnableIRQ (EXTI1_IRQn);
	NVIC_ClearPendingIRQ (EXTI1_IRQn); 

	SYSCFG->EXTICR[0] &= 0xFF0F;
	SYSCFG->EXTICR[0] |= 0x0000; 

	EXTI->RTSR |=0x0002;
	EXTI->IMR |=0x0002;

	__enable_irq();
}

void EXTI1_IRQHandler () {
	if (reset != 0) {
		switch (GPIOC-IDR&0xFF) {
			case 0x14: //0x00010100
				key = 0;
				break;
			case 0x88: //0x10001000
				key = 1;
				break;
			case 0x84: //0x10000100
				key = 2;
				break;
			case 0x82: //0x10000010
				key = 3;
				break;
			case 0x48: //0x01001000
				key = 4;
				break;
			case 0x44: //0x01000100
				key = 5;
				break;
			case 0x42: //0x01000010
				key = 6;
				break;
			case 0x28: //0x00101000
				key = 7;
				break;
			case 0x24: //0x00100100
				key = 8;
				break;
			case 0x22: //0x00100010
				key = 9;
				break;
			default:
				key = -1;
				break;
		}
		
		if (key != -1) {
			reset = 5;
		}
	}
	NVIC_ClearPendingIRQ(EXTI1_IRQn);
	EXTI->PR |= 0x0002;
}

void delay (int seconds) {
	int i,j,n;
	if (reset > 0) {
		reset--;
	}
	for (i=0; i<350000/seconds; i++) {
		n = i;
	}
}

void counter() {
	if (count != 9) { 
		count++; 
	} else {
		count = 0; 
	}
}

void display(int input) {
	GPIOC->ODR = input;
}

/*------------------------------------------------*/
/* Main program */
/*------------------------------------------------*/
int main(void) {
	
	PinSetup(); 
	count = 0; 
	key = 0;
	reset = 0;
	
	display(count);
	while (1) {
		 
		counter();
		delay(1); 
		if (reset == 0) {
			display(count);
		} else {
			display(key);
		}
		
	}
} 
